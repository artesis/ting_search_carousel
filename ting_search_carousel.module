<?php
/**
 * @file
 * Ting search carousel module main file.
 */

/**
 * Implements hook_menu().
 */
function ting_search_carousel_menu() {
  $items = array();

  $items['admin/config/ting/ting_search_carousel'] = array(
    'title' => 'Ting search carousel',
    'description' => 'Manage frontpage carousel',
    'page callback' => 'ting_search_carousel_admin_page',
    'page arguments' => array(),
    'access arguments' => array('access administration pages'),
    'file' => 'ting_search_carousel.admin.inc',
    'weight' => 30,
    'position' => 'left',
  );

  $items['ting_search_carousel/results/ajax'] = array(
    'title' => 'Show search carousel results',
    'page callback' => 'ting_search_carousel_result',
    'access arguments' => array('access content'),
    'file' => 'ting_search_carousel.pages.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_block_info().
 */
function ting_search_carousel_block_info() {
  $blocks = array();

  $blocks['ting_search_carousel'] = array(
    'info' => 'Ting search carousel'
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function ting_search_carousel_block_view($delta) {
  $block = array();

  switch ($delta) {
    case 'ting_search_carousel':
      $searches = variable_get('ting_carousel_search_queries', array());
      $block['content'] = theme('ting_search_carousel', array('searches' => $searches));
      break;
  }

  return $block;
}

/**
 * Implements hook_theme().
 */
function ting_search_carousel_theme($existing, $type, $theme, $path) {
  $hooks = array();
  $hooks['ting_search_carousel'] = array(
    'variables' => array('searches' => NULL),
    'template' => 'ting_search_carousel'
  );

  $hooks['ting_search_carousel_collection'] = array(
    'variables' => array('collection' => NULL),
    'template' => 'ting_search_carousel_collection'
  );

  $hooks['ting_search_carousel_admin_form'] = array(
    'render element' => 'form',
  );

  return $hooks;
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function ting_search_carousel_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' || $module == 'panels') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_cron().
 */
function ting_search_carousel_cron() {
  ting_search_carousel_do_request(TRUE);
}

/**
 * Perform a ting search, retrieve covers and store some of data in cache.
 */
function ting_search_carousel_do_request($full = FALSE) {
  $search_queries = variable_get('ting_carousel_search_queries', array());
  $sort = variable_get('ting_search_carousel_item_sorting', '');
  $search_items = array();

  // There are any queries set.
  if (count($search_queries) > 0) {
    module_load_include('with_images.inc', 'ting');

    $j = 0;

    // Search for each query up to 100 items.
    foreach ($search_queries as $item) {
      $results = ting_get_objects_with_images($item['query'], 100, $sort, array('ting_search_carousel'));

      // For each found collection, find a related item with cover.
      foreach ($results as $object) {
        $item = new stdClass();
        $item->id = $object->getLocalId();
        $creator = $object->getCreators();
        $item->creator = !empty($creator) ? $creator[0] : '';
        $item->title = $object->getTitle();
        $item->image = $object->getImage('ting_search_carousel');
        $item->alt = !empty($creator) ? $creator[0] . ': ' . $item->title : $item->title;
        $search_items[$j][] = $item;
      }

      $j++;
    }
  }

  // Clear & set the cache.
  cache_clear_all('ting_search_result', 'cache');
  cache_set('ting_search_result', $search_items, 'cache');
}

/**
 * Implements hook_image_default_styles().
 */
function ting_search_carousel_image_default_styles() {
  $styles = array();

  $styles['ting_search_carousel'] = array(
    'name' => 'ting_search_carousel',
    'effects' => array(
      0 => array(
        'label' => 'Scale',
        'help' => 'Scaling will maintain the aspect-ratio of the original image. If only a single dimension is specified, the other dimension will be calculated.',
        'effect callback' => 'image_scale_effect',
        'dimensions callback' => 'image_scale_dimensions',
        'form callback' => 'image_scale_form',
        'summary theme' => 'image_scale_summary',
        'module' => 'image',
        'name' => 'image_scale',
        'data' => array(
          'width' => '',
          'height' => '140',
          'upscale' => 0,
        ),
        'weight' => '1',
      ),
    ),
  );

  return $styles;
}
